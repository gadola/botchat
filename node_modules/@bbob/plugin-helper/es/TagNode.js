"use strict";

exports.__esModule = true;
exports.default = exports.TagNode = void 0;

var _char = require("./char");

var _index = require("./index");

class TagNode {
  constructor(tag, attrs, content) {
    this.tag = tag.toLowerCase();
    this.attrs = attrs;
    this.content = [].concat(content);
  }

  attr(name, value) {
    if (typeof value !== 'undefined') {
      this.attrs[name] = value;
    }

    return this.attrs[name];
  }

  append(value) {
    return (0, _index.appendToNode)(this, value);
  }

  get length() {
    return (0, _index.getNodeLength)(this);
  }

  toString() {
    var OB = _char.OPEN_BRAKET;
    var CB = _char.CLOSE_BRAKET;
    return OB + this.tag + CB + this.content.reduce((r, node) => r + node.toString(), '') + OB + _char.SLASH + this.tag + CB;
  }

}

exports.TagNode = TagNode;

TagNode.create = function (tag, attrs, content) {
  if (attrs === void 0) {
    attrs = {};
  }

  if (content === void 0) {
    content = [];
  }

  return new TagNode(tag, attrs, content);
};

TagNode.isOf = (node, type) => node.tag === type;

var _default = TagNode;
exports.default = _default;